#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/mman.h>

int main() {
    int *shared_variable;  // Pointer to the shared variable

    // Create a shared memory region
    shared_variable = mmap(NULL, sizeof(int), PROT_READ | PROT_WRITE, MAP_SHARED | MAP_ANONYMOUS, -1, 0);
   
    if (shared_variable == MAP_FAILED) {
        perror("mmap");
        exit(EXIT_FAILURE);
    }
     *shared_variable=0;
    // Fork a child process
    pid_t child_pid = fork();

    if (child_pid == -1) {
        perror("fork");
        exit(EXIT_FAILURE);
    } else if (child_pid == 0) {
        // Child process
        if(*shared_variable==0)
        {
            *shared_variable=3;
            printf("The child process won the race and the value is: %d\n", *shared_variable);
        }
    } else {
        wait(NULL);
if(*shared_variable==0)
        {
            *shared_variable=2;
            printf("The parent process won the race and the value is: %d\n", *shared_variable);
        }
    }
    return 0;
}
